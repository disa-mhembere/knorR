% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knor.R
\name{Hclust}
\alias{Hclust}
\title{Perform parallel hierarchical clustering on a data matrix.}
\usage{
Hclust(data, centers, nrow = -1, ncol = -1, dist.type = c("eucl",
  "cos", "taxi"), algo = c("kmeans"), min.clust.size = 1,
  init = c("kmeanspp", "random", "forgy", "none"), nthread = -1)
}
\arguments{
\item{data}{Data file name on disk (NUMA optmized) or In memory data matrix}

\item{centers}{The number of centers (i.e., k)}

\item{nrow}{The number of samples in the dataset}

\item{ncol}{The number of features in the dataset}

\item{dist.type}{What dissimilarity metric to use}

\item{algo}{What splitting algorithm to use c("kmeans")}

\item{min.clust.size}{The minimum size of a cluster when it cannot be split}

\item{init}{The type of initialization to use c("kmeanspp", "random",
"forgy", "none")}

\item{nthread}{The number of parallel thread to run}
}
\value{
A list of lists containing the attributes of the output of kmeans.
 cluster: A vector of integers (from 1:\strong{k}) indicating the cluster to
         which each point is allocated.
 centers: A matrix of cluster centres.
 size: The number of points in each cluster.
 iter: The number of (outer) iterations.
}
\description{
A recursive (not acutally implemented as recursion) partitioning of data into
 two disjoint sets at every level as described in
 https://en.wikipedia.org/wiki/Hierarchical_clustering
}
\examples{
iris.mat <- as.matrix(iris[,1:4])
k <- length(unique(iris[, dim(iris)[2]])) # Number of unique classes
kms <- Hclust(iris.mat, k)

}
\author{
Disa Mhembere <disa@cs.jhu.edu>
}
